{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","el1","img_url","fd1","pt1","el2","fd2","pt2","el1Results","el2Results","fd1Results","fd2Results","pt1Results","pt2Results","handleSubmit","bind","assertThisInitialized","handleChange","handleOptionClick","setState","el1Input","el2Input","fd1Input","fd2Input","pt1Input","pt2Input","event","_this2","preventDefault","ret_data","data","FormData","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","pair","value","err","return","console","log","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","type","_this3","val","name","includes","id","part_type","query","length","obj","_this4","textContent","pt","q","part","_this5","ret_array","i","push","react_default","a","createElement","className","onClick","name_hasbro","onChange","class","aria-describedby","placeholder","returnQueriedMenuList","src","alt","attack","defense","stamina","weight_stat","speed","burst","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76e9627c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n                  el1:{\n                    img_url : \"\"\n                  },\n                  fd1: {\n                    img_url : \"\"\n                  },\n                  pt1:{\n                    img_url : \"\"\n                  },\n                  el2:{\n                    img_url : \"\"\n                  },\n                  fd2:{\n                    img_url : \"\"\n                  },\n                  pt2:{\n                    img_url : \"\"\n                  },\n                  el1Results:[],\n                  el2Results:[],\n                  fd1Results:[],\n                  fd2Results:[],\n                  pt1Results:[],\n                  pt2Results:[]\n                };\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleOptionClick = this.handleOptionClick.bind(this)\n  }\n\n  componentDidMount(){\n      this.setState({\n        el1Input:\"\",\n        el2Input:\"\",\n        fd1Input:\"\",\n        fd2Input:\"\",\n        pt1Input:\"\",\n        pt2Input:\"\"\n      })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let ret_data = {}\n    const data = new FormData(event.target);\n    for(var pair of data.entries()) {\n      ret_data[pair[0]] = pair[1]\n    }\n\n    console.log(ret_data)\n\n    fetch('http://localhost:9000/api/', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(ret_data)\n    }).then(res => res.json())\n      .then(res => this.setState({el1:res[0][0],\n                                  fd1: res[1][0],\n                                  pt1: res[2][0],\n                                  el2:res[3][0],\n                                  fd2:res[4][0],\n                                  pt2:res[5][0]}));\n  }\n\n  handleChange(event){\n    let obj = {}\n    let val = event.target.value;\n    let type;\n    let name = event.target.name;\n\n    if(name.includes(\"el\")){\n      type = \"Energy Layer\";\n    } else if(name.includes(\"fd\")){\n      type = \"Forge Disc\"\n    } else{\n      type=\"Performance Tip\"\n    }\n\n    let id = event.target.id\n    fetch('http://localhost:9000/api/part', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({part_type:type, query:val})\n    }).then(res => res.json())\n    .then(res => {\n      if(res.length ==0 ){\n        console.log(\"sql query empty\")\n        let obj = {};\n        obj[id] = val;\n        this.setState(obj);\n      }else{\n        let obj = {};\n        obj[id] = val;\n        obj[name] = res[0]\n        obj[name+'Results'] = res\n        this.setState(obj)\n      }\n    });\n  }\n\n  handleOptionClick(event){\n    let obj = {}\n    let val = event.target.textContent;\n    let type;\n    let name = event.target.name;\n\n    if(name.includes(\"el\")){\n      type = \"Energy Layer\";\n    } else if(name.includes(\"fd\")){\n      type = \"Forge Disc\"\n    } else{\n      type=\"Performance Tip\"\n    }\n\n    let id = event.target.id\n    fetch('http://localhost:9000/api/part', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({part_type:type, query:val})\n    }).then(res => res.json())\n    .then(res => {\n      if(res.length ==0 ){\n        console.log(\"sql query empty\")\n        let obj = {};\n        obj[id] = val;\n        this.setState(obj);\n      }else{\n        let obj = {};\n        obj[id] = val;\n        obj[name] = res[0]\n        obj[name+'Results'] = res\n        this.setState(obj)\n      }\n    });\n  }\n\n\n\n  renderPart(pt, q, part){\n    fetch('http://localhost:9000/api/part', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({part_type:pt, query:q})\n    }).then(res => res.json())\n    .then(res => {\n      let obj = {};\n      obj[part] = res[0]\n      this.setState(obj)\n    });\n  }\n\n  returnQueriedMenuList(part){\n    console.log(this.state[part+\"Results\"])\n    let ret_array = []\n    for(let i=0; i<this.state[part+\"Results\"].length;i++){\n      ret_array.push(<span><a id={part+\"Input\"} name={part} className=\"btn\" onClick={this.handleOptionClick}>{this.state[part+\"Results\"][i].name_hasbro}</a><br/></span>)\n    }\n    return(\n      ret_array\n    )\n  }\n\n  render(){\n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        <div className=\"container-fluid\">\n          <header className=\"App-header row\">\n          </header>\n          <div className=\"container-body row\">\n          <form className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                  <h3>Beyblade 1</h3>\n                  <div className=\"form-group align-items-center part-row form-row\">\n                    <div className=\"col-sm-4\">\n                      <input value={this.state.el1Input} onChange={this.handleChange} id=\"el1Input\" class=\"form-control\" aria-describedby=\"el1\" placeholder=\"Energy Layer Name\" name=\"el1\"/>\n                    </div>\n                    <div className=\"col-4\">\n                      <div className=\"scrollable-menu\">\n                        {this.returnQueriedMenuList(\"el1\")}\n                      </div>\n                    </div>\n                    <div className=\"col-4\">\n                      <img src={this.state.el1.img_url} className=\"partShow\" alt=\"el1\" />\n                    </div>\n                  </div>\n                  <div className=\"form-group align-items-center part-row form-row\">\n                    <div className=\"col-4\">\n                      <input value={this.state.fd1Input} onChange={this.handleChange} id=\"fd1Input\" class=\"form-control\" aria-describedby=\"fd1\" placeholder=\"Forge Disc Name\" name=\"fd1\"/>\n                    </div>\n                    <div className=\"col-4\">\n                      <div className=\"scrollable-menu\">\n                        {this.returnQueriedMenuList(\"fd1\")}\n                      </div>\n                    </div>\n                    <div className=\"col-4\">\n                      <img src={this.state.fd1.img_url} className=\"partShow\" alt=\"fd1\" />\n                    </div>\n                  </div>\n                  <div className=\"form-group align-items-center part-row form-row\">\n                    <div className=\"col-4\">\n                      <input value={this.state.pt1Input} onChange={this.handleChange} id=\"pt1Input\" class=\"form-control\" aria-describedby=\"pt1\" placeholder=\"Performance Tip Name\" name=\"pt1\"/>\n                    </div>\n                    <div className=\"col-4\">\n                      <div className=\"scrollable-menu\">\n                        {this.returnQueriedMenuList(\"pt1\")}\n                      </div>\n                    </div>\n                    <div className=\"col-4\">\n                      <img src={this.state.pt1.img_url} className=\"partShow\" alt=\"pt1\" />\n                    </div>\n                  </div>\n                  <p>Attack: {this.state.el1.attack + this.state.fd1.attack + this.state.pt1.attack}&nbsp;\n                  Defense: {this.state.el1.defense + this.state.fd1.defense + this.state.pt1.defense}&nbsp;\n                  Stamina: {this.state.el1.stamina + this.state.fd1.stamina + this.state.pt1.stamina}&nbsp;\n                  Weight: {this.state.el1.weight_stat + this.state.fd1.weight_stat + this.state.pt1.weight_stat}&nbsp;\n                  Speed: {this.state.el1.speed + this.state.fd1.speed + this.state.pt1.speed}&nbsp;\n                  Burst: {this.state.el1.burst}</p>\n                </div>\n                <div className=\"col-md-6\">\n                    <h3>Beyblade 2</h3>\n                    <div className=\"form-group align-items-center part-row form-row\">\n                      <div className=\"col-4\">\n                        <img src={this.state.el2.img_url} className=\"partShow\" alt=\"el2\" />\n                      </div>\n                      <div className=\"col-4\">\n                        <div className=\"scrollable-menu\">\n                          {this.returnQueriedMenuList(\"el2\")}\n                        </div>\n                      </div>\n                      <div className=\"col-4\">\n                        <input value={this.state.el2Input} onChange={this.handleChange} id=\"el2Input\" class=\"form-control\" aria-describedby=\"el2\" placeholder=\"Energy Layer Name\" name=\"el2\"/>\n                      </div>\n                    </div>\n                    <div className=\"form-group align-items-center part-row form-row\">\n                      <div className=\"col-4\">\n                        <img src={this.state.fd2.img_url} className=\"partShow\" alt=\"fd2\" />\n                      </div>\n                      <div className=\"col-4\">\n                        <div className=\"scrollable-menu\">\n                          {this.returnQueriedMenuList(\"fd2\")}\n                        </div>\n                      </div>\n                      <div className=\"col-4\">\n                        <input value={this.state.fd2Input} onChange={this.handleChange} id=\"fd2Input\" class=\"form-control\" aria-describedby=\"fd2\" placeholder=\"Forge Disc Name\" name=\"fd2\"/>\n                      </div>\n                    </div>\n                    <div className=\"form-group align-items-center part-row form-row\">\n                      <div className=\"col-4\">\n                        <img src={this.state.pt2.img_url} className=\"partShow\" alt=\"pt2\" />\n                      </div>\n                      <div className=\"col-4\">\n                        <div className=\"scrollable-menu\">\n                          {this.returnQueriedMenuList(\"pt2\")}\n                        </div>\n                      </div>\n                      <div className=\"col-4\">\n                        <input value={this.state.pt2Input} onChange={this.handleChange} id=\"pt2Input\" class=\"form-control\" aria-describedby=\"pt2\" placeholder=\"Performace Tip Name\" name=\"pt2\"/>\n                      </div>\n                    </div>\n                    <p>Attack: {this.state.el2.attack + this.state.fd2.attack + this.state.pt2.attack}&nbsp;\n                    Defense: {this.state.el2.defense + this.state.fd2.defense + this.state.pt2.defense}&nbsp;\n                    Stamina: {this.state.el2.stamina + this.state.fd2.stamina + this.state.pt2.stamina}&nbsp;\n                    Weight: {this.state.el2.weight_stat + this.state.fd2.weight_stat + this.state.pt2.weight_stat}&nbsp;\n                    Speed: {this.state.el2.speed + this.state.fd2.speed + this.state.pt2.speed}&nbsp;\n                    Burst: {this.state.el2.burst}</p>\n                  </div>\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}